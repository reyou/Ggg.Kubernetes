kind: PersistentVolume
apiVersion: v1
metadata:
  name: pv1
  labels:
    type: local
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  storageClassName: standard
  hostPath:
    path: "/usr/share/redis"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: redis-pvc
spec:
    accessModes:
      - ReadWriteMany    
    resources:
        requests:
            storage: 10Mi
---
apiVersion: v1
kind: Pod
metadata:
  name: redishapod1
  labels:
    app: redishapod1
spec: 
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: 'redis-pvc'     
  containers:
    - name: redisharedis
      image: aozdemir/redisharedis               
      imagePullPolicy: Always   
      volumeMounts:
      - mountPath: /usr/share/redis
        name: data 
      resources:
        limits:
          cpu: "1"
          memory: "800Mi"
        requests:
          cpu: "0.1"
          memory: "200Mi"
      ports:
        - containerPort: 6379    
          name: redis
        - containerPort: 80
          name: node
---
apiVersion: v1
kind: Pod
metadata:
  name: redishapod2
  labels:
    app: redishapod2
spec: 
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: 'redis-pvc'     
  containers:
    - name: redisharedis
      image: aozdemir/redisharedis
      imagePullPolicy: Always   
      volumeMounts:
      - mountPath: /usr/share/redis
        name: data        
      resources:
        limits:
          cpu: "1"
          memory: "800Mi"
        requests:
          cpu: "0.1"
          memory: "200Mi"
      ports:
        - containerPort: 6379    
          name: redis
        - containerPort: 80
          name: node   
---  
apiVersion: v1
kind: Pod
metadata:
  name: redishapod3
  labels:
    app: redishapod3
spec: 
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: 'redis-pvc'     
  containers:
    - name: redisharedis
      image: aozdemir/redisharedis
      imagePullPolicy: Always   
      volumeMounts:
      - mountPath: /usr/share/redis
        name: data        
      resources:
        limits:
          cpu: "1"
          memory: "800Mi"
        requests:
          cpu: "0.1"
          memory: "200Mi"
      ports:
        - containerPort: 6379    
          name: redis
        - containerPort: 80
          name: node  
---
apiVersion: v1
kind: Service
metadata:
  name: redishapod1-service
  labels:
    name: redishapod1-service
spec:
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
    - name: nodejs
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: redishapod1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redishapod2-service
  labels:
    name: redishapod2-service
spec:
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
    - name: nodejs
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: redishapod2
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redishapod3-service
  labels:
    name: redishapod3-service
spec:
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
    - name: nodejs
      port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: redishapod3
  type: ClusterIP
